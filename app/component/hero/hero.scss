@use 'sass:map';
@use '../../style/00_settings/color' as colors;
@use '../../style/00_settings/util' as utils;
@use '../../style/01_tools/mixin' as mixins;

@mixin svg {
  position: absolute;
  color: map.get(colors.$base-color, black);
  cursor: pointer;
}

.hero {
  position: relative;
  background-color: map.get(colors.$base-color, primary);
  height: calc(100vh - 62px);
  padding: 0 utils.bu(2) utils.bu(7.5);

  @include mixins.breakpoint(md) {
    padding-left: utils.bu(4);
    padding-right: utils.bu(4);
    padding-bottom: utils.rem(104);
  }

  @include mixins.breakpoint(xl) {
    padding-left: utils.rem(310);
    padding-right: utils.rem(310);
    padding-bottom: utils.rem(121);
  }

  > div {
    display: flex;
    align-items: center;
    flex-direction: column;
    height: 80%;
    gap: utils.bu(3);
    @include mixins.center-content;

    @include mixins.breakpoint(md) {
      display: flex;
      align-items: center;
      flex-direction: column;
    }

    > p {
      text-transform: uppercase;
    }

    > h1 {
      text-align: center;
      text-transform: uppercase;

      @include mixins.breakpoint(md) {
        > br {
          display: none;
        }
      }

      > span {
        font-weight: bold;
      }
    }
  }

  > footer {
    display: flex;
    align-items: center;
    justify-content: space-evenly;

    @include mixins.breakpoint(lg) {
      padding: 0 utils.rem(30);
      justify-content: center;
    }

    > div {
      display: flex;
      align-items: center;
      flex-direction: column;
      width: 276px;
      padding: utils.bu(0.5);

      @include mixins.breakpoint(md) {
        padding: utils.bu(1) utils.bu(1.5);
      }

      @include mixins.breakpoint(lg) {
        padding: utils.bu(2) utils.bu(4.5);
      }

      > span {
        &:last-of-type {
          text-transform: uppercase;
        }
      }
    }
  }
}
